# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: buda/services/events_collector.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from buda.entities import funnel_pb2 as buda_dot_entities_dot_funnel__pb2
from buda.entities import funnel_event_pb2 as buda_dot_entities_dot_funnel__event__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='buda/services/events_collector.proto',
  package='buda.services',
  syntax='proto3',
  serialized_pb=_b('\n$buda/services/events_collector.proto\x12\rbuda.services\x1a\x1a\x62uda/entities/funnel.proto\x1a buda/entities/funnel_event.proto\"\x1b\n\x08Response\x12\x0f\n\x07message\x18\x01 \x01(\t2\xa1\x01\n\x0f\x45ventsCollector\x12\x41\n\rCollectFunnel\x12\x15.buda.entities.Funnel\x1a\x17.buda.services.Response\"\x00\x12K\n\x12\x43ollectFunnelEvent\x12\x1a.buda.entities.FunnelEvent\x1a\x17.buda.services.Response\"\x00\x62\x06proto3')
  ,
  dependencies=[buda_dot_entities_dot_funnel__pb2.DESCRIPTOR,buda_dot_entities_dot_funnel__event__pb2.DESCRIPTOR,])




_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='buda.services.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='message', full_name='buda.services.Response.message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=117,
  serialized_end=144,
)

DESCRIPTOR.message_types_by_name['Response'] = _RESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(
  DESCRIPTOR = _RESPONSE,
  __module__ = 'buda.services.events_collector_pb2'
  # @@protoc_insertion_point(class_scope:buda.services.Response)
  ))
_sym_db.RegisterMessage(Response)


try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities


  class EventsCollectorStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.CollectFunnel = channel.unary_unary(
          '/buda.services.EventsCollector/CollectFunnel',
          request_serializer=buda_dot_entities_dot_funnel__pb2.Funnel.SerializeToString,
          response_deserializer=Response.FromString,
          )
      self.CollectFunnelEvent = channel.unary_unary(
          '/buda.services.EventsCollector/CollectFunnelEvent',
          request_serializer=buda_dot_entities_dot_funnel__event__pb2.FunnelEvent.SerializeToString,
          response_deserializer=Response.FromString,
          )


  class EventsCollectorServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def CollectFunnel(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CollectFunnelEvent(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_EventsCollectorServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'CollectFunnel': grpc.unary_unary_rpc_method_handler(
            servicer.CollectFunnel,
            request_deserializer=buda_dot_entities_dot_funnel__pb2.Funnel.FromString,
            response_serializer=Response.SerializeToString,
        ),
        'CollectFunnelEvent': grpc.unary_unary_rpc_method_handler(
            servicer.CollectFunnelEvent,
            request_deserializer=buda_dot_entities_dot_funnel__event__pb2.FunnelEvent.FromString,
            response_serializer=Response.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'buda.services.EventsCollector', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaEventsCollectorServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def CollectFunnel(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CollectFunnelEvent(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaEventsCollectorStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def CollectFunnel(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CollectFunnel.future = None
    def CollectFunnelEvent(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CollectFunnelEvent.future = None


  def beta_create_EventsCollector_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('buda.services.EventsCollector', 'CollectFunnel'): buda_dot_entities_dot_funnel__pb2.Funnel.FromString,
      ('buda.services.EventsCollector', 'CollectFunnelEvent'): buda_dot_entities_dot_funnel__event__pb2.FunnelEvent.FromString,
    }
    response_serializers = {
      ('buda.services.EventsCollector', 'CollectFunnel'): Response.SerializeToString,
      ('buda.services.EventsCollector', 'CollectFunnelEvent'): Response.SerializeToString,
    }
    method_implementations = {
      ('buda.services.EventsCollector', 'CollectFunnel'): face_utilities.unary_unary_inline(servicer.CollectFunnel),
      ('buda.services.EventsCollector', 'CollectFunnelEvent'): face_utilities.unary_unary_inline(servicer.CollectFunnelEvent),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_EventsCollector_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('buda.services.EventsCollector', 'CollectFunnel'): buda_dot_entities_dot_funnel__pb2.Funnel.SerializeToString,
      ('buda.services.EventsCollector', 'CollectFunnelEvent'): buda_dot_entities_dot_funnel__event__pb2.FunnelEvent.SerializeToString,
    }
    response_deserializers = {
      ('buda.services.EventsCollector', 'CollectFunnel'): Response.FromString,
      ('buda.services.EventsCollector', 'CollectFunnelEvent'): Response.FromString,
    }
    cardinalities = {
      'CollectFunnel': cardinality.Cardinality.UNARY_UNARY,
      'CollectFunnelEvent': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'buda.services.EventsCollector', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
